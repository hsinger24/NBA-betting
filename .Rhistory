setwd("~/Desktop/NBA-betting/Model_Build")
library(MASS)
library(dplyr)
library(caret)
library(reshape2)
library(fastDummies)
library(deepnet)
# Reading in and attaching data
data = read.csv('data/final_dataset.csv')
View(data)
data = subset(data, select = -c(1, 41, 108:209))
View(data)
attach(data)
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
View(data)
train = (Game_ID<21800001)
training_data = data[train, ]
training_data = subset(training_data, select = -c(1,2,3,4,106))
training_target = Team1_Won[train]
training_target = factor(as.character(training_target), levels = c('0','1'), labels = c('L', 'W'))
# Getting test data
test_data = data[!train, ]
test_data = subset(test_data, select = -c(1,2,3,4,106))
test_target = Team1_Won[!train]
test_target = factor(as.character(test_target), levels = c('0','1'), labels = c('L', 'W'))
set.seed(5)
ctrl = trainControl(method = 'repeatedcv', number = 10, savePrediction = 'final', classProbs = T)
# Logistic Regression
logistic = train(training_data,
training_target,
trControl = ctrl,
method='glm',
family=binomial())
predictions_logistic = predict(object = logistic, test_data, type = 'raw')
prediction_accuracy_logistic = mean(predictions_logistic == test_target) # 65.5%
training_target = Team1_Won
# training_data = subset(training_data, select = -c(1,2,3,4,106))
training_data = subset(data, select = -c(1,2,3,4,106))
training_target = Team1_Won
View(training_data)
set.seed(5)
ctrl = trainControl(method = 'repeatedcv', number = 10, savePrediction = 'final', classProbs = T)
# Logistic Regression
logistic = train(training_data,
training_target,
trControl = ctrl,
method='glm',
family=binomial())
predictions_logistic = predict(object = logistic, test_data, type = 'raw')
prediction_accuracy_logistic = mean(predictions_logistic == test_target)
training_target = factor(as.character(training_target), levels = c('0','1'), labels = c('L', 'W'))
set.seed(5)
ctrl = trainControl(method = 'repeatedcv', number = 10, savePrediction = 'final', classProbs = T)
# Logistic Regression
logistic = train(training_data,
training_target,
trControl = ctrl,
method='glm',
family=binomial())
predictions_logistic = predict(object = logistic, test_data, type = 'raw')
prediction_accuracy_logistic = mean(predictions_logistic == test_target)
training_target = Team1_Won
set.seed(5)
ctrl = trainControl(method = 'repeatedcv', number = 10, savePrediction = 'final', classProbs = T)
# Logistic Regression
logistic = train(training_data,
training_target,
trControl = ctrl,
method='glm',
family=binomial())
predictions_logistic = predict(object = logistic, test_data, type = 'raw')
saveRDS(logistic, 'logistic_model.rds')
########## Setting working directory and imports ##########
setwd("~/Desktop/NBA-betting")
library(MASS)
library(dplyr)
library(caret)
library(reshape2)
library(fastDummies)
library(deepnet)
# Reading in and attaching data
data = read.csv('current_season_data/todays_stats.csv')
View(data)
data = subset(data, select = -c(1, 41, 108:209))
attach(data)
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
# Getting necessary columns for prediction
inputs= subset(data, select = -c(1,2,3,4,106))
readRDS('Model_Build/logistic.rds')
########## Setting working directory and imports ##########
setwd("~/Desktop/NBA-betting")
setwd("~/Desktop/NBA-betting")
readRDS('Model_Build/logistic_model.rds')
model = readRDS('Model_Build/logistic_model.rds')
all_data_today = read.csv('current_season_data/todays_stats.csv')
data = all_data_today
data = subset(data, select = -c(1, 41, 108:209))
attach(data)
# Converting binary to factors
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
# Getting necessary columns for prediction
inputs= subset(data, select = -c(1,2,3,4,106))
all_data_today <- all_data_today %>%
mutate(Team1_Prob = predict(object = model, test_data, type = 'raw'))
all_data_today <- all_data_today %>%
mutate(Team1_Prob = predict(object = model, inputs, type = 'raw'))
View(all_data_today)
write.csv(all_data_today, 'current_season_data/todays_stats.csv')
########## Setting working directory and imports ##########
setwd("~/Desktop/NBA-betting")
model = readRDS('Model_Build/logistic_model.rds')
library(MASS)
library(dplyr)
library(caret)
library(reshape2)
library(fastDummies)
library(deepnet)
########## Importing data ##########
# Reading in and attaching data
all_data_today = read.csv('current_season_data/todays_stats.csv')
data = all_data_today
data = subset(data, select = -c(1, 41, 108:209))
attach(data)
# Converting binary to factors
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
# Getting necessary columns for prediction
inputs= subset(data, select = -c(1,2,3,4,106))
########## Making predictions ##########
all_data_today <- all_data_today %>%
mutate(Team1_Prob = predict(object = model, inputs, type = 'raw'))
write.csv(all_data_today, 'current_season_data/todays_stats.csv')
setwd("~/Desktop/NBA-betting")
model = readRDS('Model_Build/logistic_model.rds')
library(MASS)
library(dplyr)
library(caret)
library(reshape2)
library(fastDummies)
library(deepnet)
########## Importing data ##########
# Reading in and attaching data
all_data_today = read.csv('current_season_data/todays_stats.csv')
data = all_data_today
data = subset(data, select = -c(1, 41, 108:209))
attach(data)
# Converting binary to factors
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
# Getting necessary columns for prediction
inputs= subset(data, select = -c(1,2,3,4,106))
########## Making predictions ##########
all_data_today <- all_data_today %>%
mutate(Team1_Prob = predict(object = model, inputs, type = 'raw'))
write.csv(all_data_today, 'current_season_data/todays_stats.csv')
write.csv(all_data_today, 'current_season_data/todays_stats.csv')
########## Setting working directory and imports ##########
setwd("~/Desktop/NBA-betting")
model = readRDS('Model_Build/logistic_model.rds')
library(MASS)
library(dplyr)
library(caret)
library(reshape2)
library(fastDummies)
library(deepnet)
########## Importing data ##########
# Reading in and attaching data
all_data_today = read.csv('current_season_data/todays_stats.csv')
data = all_data_today
data = subset(data, select = -c(1, 41, 108:209))
attach(data)
# Converting binary to factors
data$Team1_Won = factor(as.character(data$Team1_Won), levels = c('0','1'), labels = c('L', 'W'))
data$Team1_is_B2B = factor(as.character(data$Team1_is_B2B), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First = factor(as.character(data$Team1_is_B2B_First), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second = factor(as.character(data$Team1_is_B2B_Second), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home = factor(as.character(data$Team1_is_Home), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Opp = factor(as.character(data$Team1_is_B2B_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_First_Opp = factor(as.character(data$Team1_is_B2B_First_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_B2B_Second_Opp = factor(as.character(data$Team1_is_B2B_Second_Opp), levels = c('0','1'), labels = c('N', 'Y'))
data$Team1_is_Home_Opp = factor(as.character(data$Team1_is_Home_Opp), levels = c('0','1'), labels = c('N', 'Y'))
# Getting necessary columns for prediction
inputs= subset(data, select = -c(1,2,3,4,106))
########## Making predictions ##########
all_data_today <- all_data_today %>%
mutate(Team1_Prob = predict(object = model, inputs, type = 'raw'))
write.csv(all_data_today, 'current_season_data/todays_stats.csv')
